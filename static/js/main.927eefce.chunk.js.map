{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","settrailerUrl","console","log","useEffect","a","get","request","data","results","fetchData","className","map","movie","index","onClick","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","substr","Navbar","show","setShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.927eefce.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport default instance;","import React,{useState,useEffect} from 'react'\nimport axios from './axios';\nimport './Row.css';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer'\n\nconst base_url = 'http://image.tmdb.org/t/p/original/';\n\nconst Row = ({title,fetchUrl,isLargeRow}) => {\n\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, settrailerUrl] = useState(\"\")\n\n    console.log(trailerUrl);\n    useEffect(() => {\n       async function fetchData(){\n           const request = await axios.get(fetchUrl)\n           setMovies(request.data.results)\n           return request;\n       }\n       fetchData()\n    }, [fetchUrl])\n\n\n    const opts = {\n      height: '390',\n      width: '100%',\n      playerVars: {\n        autoplay: 1,\n      },\n    };\n\n    const handleClick = (movie) => {\n      if(trailerUrl){\n        settrailerUrl('');\n      }else{\n        movieTrailer(movie?.title || movie?.name || movie?.original_name || '')\n        .then(url =>{\n          //https://www.youtube.com/eatch?v=\n          console.log(url);\n          const urlParams = new URLSearchParams(new URL(url).search);\n         settrailerUrl(urlParams.get(\"v\"));\n        }).catch(error => console.log(error));\n      }\n    }\n\n    \n\n    return (\n        <div className='row'>\n            \n            <h2>{title}</h2>\n           \n            <div className='row__posters'>\n              {movies.map((movie,index) => (\n            <img \n            onClick={() => handleClick(movie)}\n            className={`row__poster ${isLargeRow && 'row__postarLarge'}`} \n            key={index} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n            alt={movie.name}\n            />\n              ))}\n            </div>\n\n          {trailerUrl &&  <YouTube videoId={trailerUrl} opts={opts}/>}\n        </div>\n    )\n}\n\nexport default Row\n","const API_KEY = '20dd1ec5d975906cf34d5d13b51d0d72';\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\n    fetchTopRated: `/movie/top_rated/?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React,{useEffect, useState} from 'react';\nimport axios from './axios';\nimport requests from './request';\nimport './Banner.css'\n\nconst Banner = () => {\n\n    const [movie, setMovie] = useState([]);\n     console.log(movie);\n    useEffect(() => {\n       async function fetchData(){\n       const request = await axios.get(requests.fetchNetflixOriginals);\n     setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)])\n\n       }\n       fetchData();\n    }, [])\n\n    function truncate(str,n){\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n    }\n    return (\n        <header \n        className='banner' \n        style={{\n            backgroundSize:'cover',\n             backgroundImage: `url('http://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,\n             backgroundPosition:'center center'\n             \n             }}\n             >\n            <div className=\"banner__contents\">\n                <h1 className='banner__title'>{movie?.title || movie?.name || movie?.original_name}</h1>\n                  <div className='banner__buttons'>\n                     <button className='banner__button'>Play</button> \n                     <button className='banner__button'>My list</button> \n                  </div>  \n\n                  <h1 className='banner__description'>\n                  {truncate(movie?.overview,150)}\n                  </h1>\n                \n            </div>\n            <div className='banner--fadeBottom'/>\n        </header>\n    );\n}\n\nexport default Banner\n","import React,{useState,useEffect} from 'react';\nimport './Navbar.css';\n\nconst Navbar = () => {\n    \n const [show, setShow] = useState(false);\n\n    useEffect(() => {\n       window.addEventListener('scroll', () =>{\n           if(window.scrollY > 100){\n               setShow(true)\n           }else setShow(false)\n        })\n       return () =>{\n        window.removeEventListener('scroll')\n    }\n    }, [])\n\n    return (\n        <div className={`nav ${show && 'nav__black'}`}>\n            <img \n            alt='Netflix Logo'\n            className='nav__logo'\n            src='https://assets.brand.microsites.netflix.io/assets/493f5bba-81a4-11e9-bf79-066b49664af6_cm_1440w.png?v=49'/>\n             \n            <img \n            alt='Netflix Logo'\n            className='nav__avatar'\n            src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSFjfpx625r56ij1MfrEPCAgvgmWnzw0S29xQ&usqp=CAU'/>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './request';\nimport Banner from './Banner'\nimport Navbar from './Navbar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n    <Banner/>\n     <Row title='NETFLIX ORIGINALS' isLargeRow fetchUrl={requests.fetchNetflixOriginals}/>\n     <Row title='Trending now' fetchUrl={requests.fetchTrending}/>\n     <Row title='Top Rated' fetchUrl={requests.fetchTopRated}/>\n     <Row title='Action Movies' fetchUrl={requests.fetchActionMovies}/>\n     <Row title='Comedy Movies' fetchUrl={requests.fetchComedyMovies}/>\n     <Row title='Horror Movies' fetchUrl={requests.fetchHorrorMovies}/>\n     <Row title='Romance Movies' fetchUrl={requests.fetchRomanceMovies}/>\n     <Row title='Documentries' fetchUrl={requests.fetchDocumentries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}